from ast import literal_eval
import lib




# ***********************Get Data***************************************************************
data=lib.get_data('players.txt')                                                        #*******
# sample : 3                                                                            #*******
n = int(data[0])                                                                        #*******
# sample : {(1,): 5, (2,): 5, (3,): 5, (1, 2): 10,(1, 3): 10, (2, 3):20, (1, 2, 3):25}  #*******
characteristic = literal_eval(data[1])                                                  #*******
# extract coalation from Data                                                           #*******
N = []                                                                                  #*******                                                                                  #*******
# add [0] to calculate utility of player at the first entrance                          #*******
N.append([0])
for item in characteristic.keys():                                                      #*******
    N.append(list(item))                                                                #*******
# sample : [[1], [2], [3], [1, 2], [1, 3], [2, 3], [1, 2, 3]]                           #*******
# **********************************************************************************************
# **********************************************************************************************
# **********************************************************************************************
shapley_values = []                                                                     #*******
for i in range(n):                                                                      #*******
    shapley = 0                                                                         #*******
    #----------------------------------------------------------------------------       #*******
    for j in N:                                                                         #*******
        if i + 1 not in j:                                                              #*******
            shapley += lib.calculate_shapley_ij(j[:],j,characteristic,n,i)              #*******
                                                                                        #*******
    # ---------------------------------------------------------------------------       #*******
    shapley_values.append(shapley)                                                      #*******
    print("----****************----")                                                   #*******
# **********************************************************************************************
print(shapley_values)
